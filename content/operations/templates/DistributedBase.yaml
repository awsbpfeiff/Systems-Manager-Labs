Description: >
  This template deploys the Imagetrends application on EC2 instances within an
  Autoscaling Group, behind a load balancer, with an Aurora MySQL database.
  Original Author: Scott Horsfield
  Last Modified: 29 January 2020 by Alex Livingstone
Parameters:

  CompleteSystemsManagerSectionOfLab: 
    Description: Do you want to complete the Systems Manager section of the lab? (yes/no)
    Type: String
    Default: 'yes'
    AllowedValues: 
      - 'yes'
      - 'no'
    ConstraintDescription: must be yes or no

  Email:
    Description: >-
      The email address to notify for events related to the workload (specify an
      email you have immediate access to; no email will be sent to this address
      after the lab is concluded)
    Type: String
    Default: example@example.com
    
  DBName:
    Description: Imagetrends Database Name
    Type: String
    Default: imagetrends

  DBUser:
    Description: Imagetrends Database User
    Type: String
    Default: imagetrends

  DBPassword:
    Description: Imagetrends Database User Password
    Type: String
    Default: imagetrends

  InstanceType:
    Description: AppInstance EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: must be a valid EC2 instance type.

  DBInstanceType:
    Description: AppDatabase DB instance type
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t2.small
      - db.t2.medium
    ConstraintDescription: must be a valid DB instance type.

Resources:
  VPC:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/vpc.yaml
      Parameters:
        EnvironmentName: !Ref 'AWS::StackName'
        VpcCIDR: 10.180.0.0/16
        AppSubnet1CIDR: 10.180.8.0/21
        AppSubnet2CIDR: 10.180.16.0/21
        DatabaseSubnet1CIDR: 10.180.24.0/21
        DatabaseSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/sec.yaml
      Parameters:
        EnvironmentName: !Ref 'AWS::StackName'
        VPC: !GetAtt 
          - VPC
          - Outputs.VPC

  ALB:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/alb.yaml
      Parameters:
        EnvironmentName: !Ref 'AWS::StackName'
        VPC: !GetAtt 
          - VPC
          - Outputs.VPC
        Subnets: !GetAtt 
          - VPC
          - Outputs.AppSubnets
        SecurityGroup: !GetAtt 
          - SecurityGroups
          - Outputs.LoadBalancerSecurityGroup

  ASG:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/asg.yaml
      Parameters:
        EnvironmentName: !Ref 'AWS::StackName'
        CompleteSystemsManagerSectionOfLab: !Ref CompleteSystemsManagerSectionOfLab
        InstanceType: !Ref InstanceType
        ClusterSize: 2
        VPC: !GetAtt 
          - VPC
          - Outputs.VPC
        SecurityGroup: !GetAtt 
          - SecurityGroups
          - Outputs.AppHostSecurityGroup
        Subnets: !GetAtt 
          - VPC
          - Outputs.AppSubnets
        AppTargetGroup: !GetAtt 
          - ALB
          - Outputs.TargetGroup
        PrimaryInstanceName: !GetAtt 
          - Database
          - Outputs.PrimaryInstanceName
        PrimaryInstancePort: !GetAtt 
          - Database
          - Outputs.PrimaryInstancePort
        ImageUploadBucket: !GetAtt 
          - ImageUploadBucket
          - Outputs.ImageUploadBucket

  ImageUploadBucket:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/s3.yaml
  
  Database:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/rds.yaml
      Parameters:
        DBInstanceType: !Ref DBInstanceType
        EnvironmentName: !Ref 'AWS::StackName'
        VPC: !GetAtt 
          - VPC
          - Outputs.VPC
        Subnets: !GetAtt 
          - VPC
          - Outputs.DatabaseSubnets
        SecurityGroup: !GetAtt 
          - SecurityGroups
          - Outputs.RDSInstanceSecurityGroup
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword

  Monitoring:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://workshop.aws-management.tools.s3.amazonaws.com/operations/templates/monitor.yaml
      Parameters:
        EnvironmentName: !Ref 'AWS::StackName'
        Email: !Ref Email
        VPC: !GetAtt 
          - VPC
          - Outputs.VPC
        AppHostSecurityGroupID: !GetAtt
          - SecurityGroups
          - Outputs.AppHostSecurityGroupID        
        AppSubnet1: !GetAtt 
          - VPC
          - Outputs.AppSubnet1
        AppSubnet2: !GetAtt 
          - VPC
          - Outputs.AppSubnet2         
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        DBEndpoint: !GetAtt Database.Outputs.PrimaryInstanceName               

Outputs:
  ImagetrendsAppUrl:
    Description: The URL endpoint for the Imagetrends application
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - ALB
          - Outputs.LoadBalancerUrl
